package com.example.domain;
// Generated Jan 12, 2017 11:08:44 AM by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.Table;

/**
 * TxnData generated by hbm2java
 */
@Entity
@Table(name="TXN_DATA"
    ,schema="FCDBADMIN_RK"
)
public class TxnData  implements java.io.Serializable {


     private TxnDataId id;
     private String fieldname;
     private String reffieldname;
     private String fieldformat;
     private String valEnum;
     private String defaultValue;
     private String customValidator;
     private Character isrequestfld;
     private Character validationRequired;
     private Character ismandatory;
     private String errorcode;
     private String token1;
     private String token2;
     private String token3;
     private BigDecimal length;
     private Character fixedlenflag;
     private Character justification;
     private Character fillchar;
     private String delimiter;
     private Short prefixlen;
     private Short postfixlen;
     private Character typfield;
     private BigDecimal numocc;
     private BigDecimal idoccfield;
     private Character isparamfield;
     private Character isplaceholder;
     private String enrichment;
     private Character isaggregate;
     private BigDecimal multiplier;
     private BigDecimal minoccur;
     private BigDecimal maxoccur;
     private Character ishashfield;
     private String freetext;
     private Long divider;
     private String enparamfields;

    public TxnData() {
    }

	
    public TxnData(TxnDataId id) {
        this.id = id;
    }
    public TxnData(TxnDataId id, String fieldname, String reffieldname, String fieldformat, String valEnum, String defaultValue, String customValidator, Character isrequestfld, Character validationRequired, Character ismandatory, String errorcode, String token1, String token2, String token3, BigDecimal length, Character fixedlenflag, Character justification, Character fillchar, String delimiter, Short prefixlen, Short postfixlen, Character typfield, BigDecimal numocc, BigDecimal idoccfield, Character isparamfield, Character isplaceholder, String enrichment, Character isaggregate, BigDecimal multiplier, BigDecimal minoccur, BigDecimal maxoccur, Character ishashfield, String freetext, Long divider, String enparamfields) {
       this.id = id;
       this.fieldname = fieldname;
       this.reffieldname = reffieldname;
       this.fieldformat = fieldformat;
       this.valEnum = valEnum;
       this.defaultValue = defaultValue;
       this.customValidator = customValidator;
       this.isrequestfld = isrequestfld;
       this.validationRequired = validationRequired;
       this.ismandatory = ismandatory;
       this.errorcode = errorcode;
       this.token1 = token1;
       this.token2 = token2;
       this.token3 = token3;
       this.length = length;
       this.fixedlenflag = fixedlenflag;
       this.justification = justification;
       this.fillchar = fillchar;
       this.delimiter = delimiter;
       this.prefixlen = prefixlen;
       this.postfixlen = postfixlen;
       this.typfield = typfield;
       this.numocc = numocc;
       this.idoccfield = idoccfield;
       this.isparamfield = isparamfield;
       this.isplaceholder = isplaceholder;
       this.enrichment = enrichment;
       this.isaggregate = isaggregate;
       this.multiplier = multiplier;
       this.minoccur = minoccur;
       this.maxoccur = maxoccur;
       this.ishashfield = ishashfield;
       this.freetext = freetext;
       this.divider = divider;
       this.enparamfields = enparamfields;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="idrequest", column=@Column(name="IDREQUEST", nullable=false) ), 
        @AttributeOverride(name="fldNumsequence", column=@Column(name="FLD_NUMSEQUENCE", nullable=false, precision=3, scale=0) ) } )
    public TxnDataId getId() {
        return this.id;
    }
    
    public void setId(TxnDataId id) {
        this.id = id;
    }

    
    @Column(name="FIELDNAME", length=50)
    public String getFieldname() {
        return this.fieldname;
    }
    
    public void setFieldname(String fieldname) {
        this.fieldname = fieldname;
    }

    
    @Column(name="REFFIELDNAME", length=50)
    public String getReffieldname() {
        return this.reffieldname;
    }
    
    public void setReffieldname(String reffieldname) {
        this.reffieldname = reffieldname;
    }

    
    @Column(name="FIELDFORMAT")
    public String getFieldformat() {
        return this.fieldformat;
    }
    
    public void setFieldformat(String fieldformat) {
        this.fieldformat = fieldformat;
    }

    
    @Column(name="VAL_ENUM")
    public String getValEnum() {
        return this.valEnum;
    }
    
    public void setValEnum(String valEnum) {
        this.valEnum = valEnum;
    }

    
    @Column(name="DEFAULT_VALUE", length=4000)
    public String getDefaultValue() {
        return this.defaultValue;
    }
    
    public void setDefaultValue(String defaultValue) {
        this.defaultValue = defaultValue;
    }

    
    @Column(name="CUSTOM_VALIDATOR")
    public String getCustomValidator() {
        return this.customValidator;
    }
    
    public void setCustomValidator(String customValidator) {
        this.customValidator = customValidator;
    }

    
    @Column(name="ISREQUESTFLD", length=1)
    public Character getIsrequestfld() {
        return this.isrequestfld;
    }
    
    public void setIsrequestfld(Character isrequestfld) {
        this.isrequestfld = isrequestfld;
    }

    
    @Column(name="VALIDATION_REQUIRED", length=1)
    public Character getValidationRequired() {
        return this.validationRequired;
    }
    
    public void setValidationRequired(Character validationRequired) {
        this.validationRequired = validationRequired;
    }

    
    @Column(name="ISMANDATORY", length=1)
    public Character getIsmandatory() {
        return this.ismandatory;
    }
    
    public void setIsmandatory(Character ismandatory) {
        this.ismandatory = ismandatory;
    }

    
    @Column(name="ERRORCODE", length=20)
    public String getErrorcode() {
        return this.errorcode;
    }
    
    public void setErrorcode(String errorcode) {
        this.errorcode = errorcode;
    }

    
    @Column(name="TOKEN1")
    public String getToken1() {
        return this.token1;
    }
    
    public void setToken1(String token1) {
        this.token1 = token1;
    }

    
    @Column(name="TOKEN2")
    public String getToken2() {
        return this.token2;
    }
    
    public void setToken2(String token2) {
        this.token2 = token2;
    }

    
    @Column(name="TOKEN3")
    public String getToken3() {
        return this.token3;
    }
    
    public void setToken3(String token3) {
        this.token3 = token3;
    }

    
    @Column(name="LENGTH", precision=22, scale=0)
    public BigDecimal getLength() {
        return this.length;
    }
    
    public void setLength(BigDecimal length) {
        this.length = length;
    }

    
    @Column(name="FIXEDLENFLAG", length=1)
    public Character getFixedlenflag() {
        return this.fixedlenflag;
    }
    
    public void setFixedlenflag(Character fixedlenflag) {
        this.fixedlenflag = fixedlenflag;
    }

    
    @Column(name="JUSTIFICATION", length=1)
    public Character getJustification() {
        return this.justification;
    }
    
    public void setJustification(Character justification) {
        this.justification = justification;
    }

    
    @Column(name="FILLCHAR", length=1)
    public Character getFillchar() {
        return this.fillchar;
    }
    
    public void setFillchar(Character fillchar) {
        this.fillchar = fillchar;
    }

    
    @Column(name="DELIMITER", length=30)
    public String getDelimiter() {
        return this.delimiter;
    }
    
    public void setDelimiter(String delimiter) {
        this.delimiter = delimiter;
    }

    
    @Column(name="PREFIXLEN", precision=3, scale=0)
    public Short getPrefixlen() {
        return this.prefixlen;
    }
    
    public void setPrefixlen(Short prefixlen) {
        this.prefixlen = prefixlen;
    }

    
    @Column(name="POSTFIXLEN", precision=3, scale=0)
    public Short getPostfixlen() {
        return this.postfixlen;
    }
    
    public void setPostfixlen(Short postfixlen) {
        this.postfixlen = postfixlen;
    }

    
    @Column(name="TYPFIELD", length=1)
    public Character getTypfield() {
        return this.typfield;
    }
    
    public void setTypfield(Character typfield) {
        this.typfield = typfield;
    }

    
    @Column(name="NUMOCC", precision=22, scale=0)
    public BigDecimal getNumocc() {
        return this.numocc;
    }
    
    public void setNumocc(BigDecimal numocc) {
        this.numocc = numocc;
    }

    
    @Column(name="IDOCCFIELD", precision=22, scale=0)
    public BigDecimal getIdoccfield() {
        return this.idoccfield;
    }
    
    public void setIdoccfield(BigDecimal idoccfield) {
        this.idoccfield = idoccfield;
    }

    
    @Column(name="ISPARAMFIELD", length=1)
    public Character getIsparamfield() {
        return this.isparamfield;
    }
    
    public void setIsparamfield(Character isparamfield) {
        this.isparamfield = isparamfield;
    }

    
    @Column(name="ISPLACEHOLDER", length=1)
    public Character getIsplaceholder() {
        return this.isplaceholder;
    }
    
    public void setIsplaceholder(Character isplaceholder) {
        this.isplaceholder = isplaceholder;
    }

    
    @Column(name="ENRICHMENT")
    public String getEnrichment() {
        return this.enrichment;
    }
    
    public void setEnrichment(String enrichment) {
        this.enrichment = enrichment;
    }

    
    @Column(name="ISAGGREGATE", length=1)
    public Character getIsaggregate() {
        return this.isaggregate;
    }
    
    public void setIsaggregate(Character isaggregate) {
        this.isaggregate = isaggregate;
    }

    
    @Column(name="MULTIPLIER", precision=22, scale=0)
    public BigDecimal getMultiplier() {
        return this.multiplier;
    }
    
    public void setMultiplier(BigDecimal multiplier) {
        this.multiplier = multiplier;
    }

    
    @Column(name="MINOCCUR", precision=22, scale=0)
    public BigDecimal getMinoccur() {
        return this.minoccur;
    }
    
    public void setMinoccur(BigDecimal minoccur) {
        this.minoccur = minoccur;
    }

    
    @Column(name="MAXOCCUR", precision=22, scale=0)
    public BigDecimal getMaxoccur() {
        return this.maxoccur;
    }
    
    public void setMaxoccur(BigDecimal maxoccur) {
        this.maxoccur = maxoccur;
    }

    
    @Column(name="ISHASHFIELD", length=1)
    public Character getIshashfield() {
        return this.ishashfield;
    }
    
    public void setIshashfield(Character ishashfield) {
        this.ishashfield = ishashfield;
    }

    
    @Column(name="FREETEXT", length=2000)
    public String getFreetext() {
        return this.freetext;
    }
    
    public void setFreetext(String freetext) {
        this.freetext = freetext;
    }

    
    @Column(name="DIVIDER", precision=10, scale=0)
    public Long getDivider() {
        return this.divider;
    }
    
    public void setDivider(Long divider) {
        this.divider = divider;
    }

    
    @Column(name="ENPARAMFIELDS", length=2000)
    public String getEnparamfields() {
        return this.enparamfields;
    }
    
    public void setEnparamfields(String enparamfields) {
        this.enparamfields = enparamfields;
    }




}


