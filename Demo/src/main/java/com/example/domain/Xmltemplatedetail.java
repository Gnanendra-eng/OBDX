package com.example.domain;
// Generated Jan 12, 2017 11:08:44 AM by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Xmltemplatedetail generated by hbm2java
 */
@Entity
@Table(name="XMLTEMPLATEDETAIL"
    ,schema="FCDBADMIN_RK"
)
public class Xmltemplatedetail  implements java.io.Serializable {


     private XmltemplatedetailId id;
     private Xmltemplateheader xmltemplateheader;
     private String namnode;
     private String typnode;
     private String typoccurence;
     private BigDecimal idparentnode;
     private String namfield;
     private Character optional;
     private String defaultvalue;
     private Character empty;

    public Xmltemplatedetail() {
    }

	
    public Xmltemplatedetail(XmltemplatedetailId id, Xmltemplateheader xmltemplateheader) {
        this.id = id;
        this.xmltemplateheader = xmltemplateheader;
    }
    public Xmltemplatedetail(XmltemplatedetailId id, Xmltemplateheader xmltemplateheader, String namnode, String typnode, String typoccurence, BigDecimal idparentnode, String namfield, Character optional, String defaultvalue, Character empty) {
       this.id = id;
       this.xmltemplateheader = xmltemplateheader;
       this.namnode = namnode;
       this.typnode = typnode;
       this.typoccurence = typoccurence;
       this.idparentnode = idparentnode;
       this.namfield = namfield;
       this.optional = optional;
       this.defaultvalue = defaultvalue;
       this.empty = empty;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="idapp", column=@Column(name="IDAPP", nullable=false, length=2) ), 
        @AttributeOverride(name="idtemplate", column=@Column(name="IDTEMPLATE", nullable=false, length=20) ), 
        @AttributeOverride(name="idnode", column=@Column(name="IDNODE", nullable=false, precision=22, scale=0) ) } )
    public XmltemplatedetailId getId() {
        return this.id;
    }
    
    public void setId(XmltemplatedetailId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="IDAPP", referencedColumnName="IDAPP", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="IDTEMPLATE", referencedColumnName="IDTEMPLATE", nullable=false, insertable=false, updatable=false) } )
    public Xmltemplateheader getXmltemplateheader() {
        return this.xmltemplateheader;
    }
    
    public void setXmltemplateheader(Xmltemplateheader xmltemplateheader) {
        this.xmltemplateheader = xmltemplateheader;
    }

    
    @Column(name="NAMNODE", length=30)
    public String getNamnode() {
        return this.namnode;
    }
    
    public void setNamnode(String namnode) {
        this.namnode = namnode;
    }

    
    @Column(name="TYPNODE", length=1)
    public String getTypnode() {
        return this.typnode;
    }
    
    public void setTypnode(String typnode) {
        this.typnode = typnode;
    }

    
    @Column(name="TYPOCCURENCE", length=1)
    public String getTypoccurence() {
        return this.typoccurence;
    }
    
    public void setTypoccurence(String typoccurence) {
        this.typoccurence = typoccurence;
    }

    
    @Column(name="IDPARENTNODE", precision=22, scale=0)
    public BigDecimal getIdparentnode() {
        return this.idparentnode;
    }
    
    public void setIdparentnode(BigDecimal idparentnode) {
        this.idparentnode = idparentnode;
    }

    
    @Column(name="NAMFIELD", length=30)
    public String getNamfield() {
        return this.namfield;
    }
    
    public void setNamfield(String namfield) {
        this.namfield = namfield;
    }

    
    @Column(name="OPTIONAL", length=1)
    public Character getOptional() {
        return this.optional;
    }
    
    public void setOptional(Character optional) {
        this.optional = optional;
    }

    
    @Column(name="DEFAULTVALUE")
    public String getDefaultvalue() {
        return this.defaultvalue;
    }
    
    public void setDefaultvalue(String defaultvalue) {
        this.defaultvalue = defaultvalue;
    }

    
    @Column(name="EMPTY", length=1)
    public Character getEmpty() {
        return this.empty;
    }
    
    public void setEmpty(Character empty) {
        this.empty = empty;
    }




}


