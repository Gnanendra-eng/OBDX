package com.example.domain;
// Generated Jan 12, 2017 11:08:44 AM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * I83format generated by hbm2java
 */
@Entity
@Table(name="I83FORMAT"
    ,schema="FCDBADMIN_RK"
)
public class I83format  implements java.io.Serializable {


     private I83formatId id;
     private I83data i83data;
     private String name;
     private String idresponse;
     private String buildprocessor;
     private String parseprocessor;
     private Character repeatflag;
     private String repeatformat;
     private Character reverseflag;
     private Character headerreqd;
     private Character usedefaultvalue;
     private String defaultvalue;
     private Long headerlength;
     private Set<I83formatfield> i83formatfields = new HashSet<I83formatfield>(0);

    public I83format() {
    }

	
    public I83format(I83formatId id, I83data i83data) {
        this.id = id;
        this.i83data = i83data;
    }
    public I83format(I83formatId id, I83data i83data, String name, String idresponse, String buildprocessor, String parseprocessor, Character repeatflag, String repeatformat, Character reverseflag, Character headerreqd, Character usedefaultvalue, String defaultvalue, Long headerlength, Set<I83formatfield> i83formatfields) {
       this.id = id;
       this.i83data = i83data;
       this.name = name;
       this.idresponse = idresponse;
       this.buildprocessor = buildprocessor;
       this.parseprocessor = parseprocessor;
       this.repeatflag = repeatflag;
       this.repeatformat = repeatformat;
       this.reverseflag = reverseflag;
       this.headerreqd = headerreqd;
       this.usedefaultvalue = usedefaultvalue;
       this.defaultvalue = defaultvalue;
       this.headerlength = headerlength;
       this.i83formatfields = i83formatfields;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="ver", column=@Column(name="VER", nullable=false, length=4) ), 
        @AttributeOverride(name="idformat", column=@Column(name="IDFORMAT", nullable=false, length=4) ) } )
    public I83formatId getId() {
        return this.id;
    }
    
    public void setId(I83formatId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="VER", nullable=false, insertable=false, updatable=false)
    public I83data getI83data() {
        return this.i83data;
    }
    
    public void setI83data(I83data i83data) {
        this.i83data = i83data;
    }

    
    @Column(name="NAME", length=30)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="IDRESPONSE", length=4)
    public String getIdresponse() {
        return this.idresponse;
    }
    
    public void setIdresponse(String idresponse) {
        this.idresponse = idresponse;
    }

    
    @Column(name="BUILDPROCESSOR", length=100)
    public String getBuildprocessor() {
        return this.buildprocessor;
    }
    
    public void setBuildprocessor(String buildprocessor) {
        this.buildprocessor = buildprocessor;
    }

    
    @Column(name="PARSEPROCESSOR", length=100)
    public String getParseprocessor() {
        return this.parseprocessor;
    }
    
    public void setParseprocessor(String parseprocessor) {
        this.parseprocessor = parseprocessor;
    }

    
    @Column(name="REPEATFLAG", length=1)
    public Character getRepeatflag() {
        return this.repeatflag;
    }
    
    public void setRepeatflag(Character repeatflag) {
        this.repeatflag = repeatflag;
    }

    
    @Column(name="REPEATFORMAT", length=4)
    public String getRepeatformat() {
        return this.repeatformat;
    }
    
    public void setRepeatformat(String repeatformat) {
        this.repeatformat = repeatformat;
    }

    
    @Column(name="REVERSEFLAG", length=1)
    public Character getReverseflag() {
        return this.reverseflag;
    }
    
    public void setReverseflag(Character reverseflag) {
        this.reverseflag = reverseflag;
    }

    
    @Column(name="HEADERREQD", length=1)
    public Character getHeaderreqd() {
        return this.headerreqd;
    }
    
    public void setHeaderreqd(Character headerreqd) {
        this.headerreqd = headerreqd;
    }

    
    @Column(name="USEDEFAULTVALUE", length=1)
    public Character getUsedefaultvalue() {
        return this.usedefaultvalue;
    }
    
    public void setUsedefaultvalue(Character usedefaultvalue) {
        this.usedefaultvalue = usedefaultvalue;
    }

    
    @Column(name="DEFAULTVALUE", length=100)
    public String getDefaultvalue() {
        return this.defaultvalue;
    }
    
    public void setDefaultvalue(String defaultvalue) {
        this.defaultvalue = defaultvalue;
    }

    
    @Column(name="HEADERLENGTH", precision=18, scale=0)
    public Long getHeaderlength() {
        return this.headerlength;
    }
    
    public void setHeaderlength(Long headerlength) {
        this.headerlength = headerlength;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="i83format")
    public Set<I83formatfield> getI83formatfields() {
        return this.i83formatfields;
    }
    
    public void setI83formatfields(Set<I83formatfield> i83formatfields) {
        this.i83formatfields = i83formatfields;
    }




}


