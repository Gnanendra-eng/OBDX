package com.example.domain;
// Generated Jan 12, 2017 11:08:44 AM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * I83field generated by hbm2java
 */
@Entity
@Table(name="I83FIELD"
    ,schema="FCDBADMIN_RK"
    , uniqueConstraints = @UniqueConstraint(columnNames={"VER", "NAMFIELD"}) 
)
public class I83field  implements java.io.Serializable {


     private I83fieldId id;
     private I83data i83data;
     private String namfield;
     private Character basedatatype;
     private Integer length;
     private Character buildcdflag;
     private Character parsecdflag;
     private Character fixedlenflag;
     private String format;
     private Short procflag;
     private Integer multiplier;
     private Integer currencyposition;
     private Integer yearposition;
     private Character floatflag;
     private Set<I83formatfield> i83formatfields = new HashSet<I83formatfield>(0);

    public I83field() {
    }

	
    public I83field(I83fieldId id, I83data i83data) {
        this.id = id;
        this.i83data = i83data;
    }
    public I83field(I83fieldId id, I83data i83data, String namfield, Character basedatatype, Integer length, Character buildcdflag, Character parsecdflag, Character fixedlenflag, String format, Short procflag, Integer multiplier, Integer currencyposition, Integer yearposition, Character floatflag, Set<I83formatfield> i83formatfields) {
       this.id = id;
       this.i83data = i83data;
       this.namfield = namfield;
       this.basedatatype = basedatatype;
       this.length = length;
       this.buildcdflag = buildcdflag;
       this.parsecdflag = parsecdflag;
       this.fixedlenflag = fixedlenflag;
       this.format = format;
       this.procflag = procflag;
       this.multiplier = multiplier;
       this.currencyposition = currencyposition;
       this.yearposition = yearposition;
       this.floatflag = floatflag;
       this.i83formatfields = i83formatfields;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="ver", column=@Column(name="VER", nullable=false, length=4) ), 
        @AttributeOverride(name="position", column=@Column(name="POSITION", nullable=false, precision=5, scale=0) ) } )
    public I83fieldId getId() {
        return this.id;
    }
    
    public void setId(I83fieldId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="VER", nullable=false, insertable=false, updatable=false)
    public I83data getI83data() {
        return this.i83data;
    }
    
    public void setI83data(I83data i83data) {
        this.i83data = i83data;
    }

    
    @Column(name="NAMFIELD", length=30)
    public String getNamfield() {
        return this.namfield;
    }
    
    public void setNamfield(String namfield) {
        this.namfield = namfield;
    }

    
    @Column(name="BASEDATATYPE", length=1)
    public Character getBasedatatype() {
        return this.basedatatype;
    }
    
    public void setBasedatatype(Character basedatatype) {
        this.basedatatype = basedatatype;
    }

    
    @Column(name="LENGTH", precision=5, scale=0)
    public Integer getLength() {
        return this.length;
    }
    
    public void setLength(Integer length) {
        this.length = length;
    }

    
    @Column(name="BUILDCDFLAG", length=1)
    public Character getBuildcdflag() {
        return this.buildcdflag;
    }
    
    public void setBuildcdflag(Character buildcdflag) {
        this.buildcdflag = buildcdflag;
    }

    
    @Column(name="PARSECDFLAG", length=1)
    public Character getParsecdflag() {
        return this.parsecdflag;
    }
    
    public void setParsecdflag(Character parsecdflag) {
        this.parsecdflag = parsecdflag;
    }

    
    @Column(name="FIXEDLENFLAG", length=1)
    public Character getFixedlenflag() {
        return this.fixedlenflag;
    }
    
    public void setFixedlenflag(Character fixedlenflag) {
        this.fixedlenflag = fixedlenflag;
    }

    
    @Column(name="FORMAT", length=50)
    public String getFormat() {
        return this.format;
    }
    
    public void setFormat(String format) {
        this.format = format;
    }

    
    @Column(name="PROCFLAG", precision=3, scale=0)
    public Short getProcflag() {
        return this.procflag;
    }
    
    public void setProcflag(Short procflag) {
        this.procflag = procflag;
    }

    
    @Column(name="MULTIPLIER", precision=5, scale=0)
    public Integer getMultiplier() {
        return this.multiplier;
    }
    
    public void setMultiplier(Integer multiplier) {
        this.multiplier = multiplier;
    }

    
    @Column(name="CURRENCYPOSITION", precision=5, scale=0)
    public Integer getCurrencyposition() {
        return this.currencyposition;
    }
    
    public void setCurrencyposition(Integer currencyposition) {
        this.currencyposition = currencyposition;
    }

    
    @Column(name="YEARPOSITION", precision=5, scale=0)
    public Integer getYearposition() {
        return this.yearposition;
    }
    
    public void setYearposition(Integer yearposition) {
        this.yearposition = yearposition;
    }

    
    @Column(name="FLOATFLAG", length=1)
    public Character getFloatflag() {
        return this.floatflag;
    }
    
    public void setFloatflag(Character floatflag) {
        this.floatflag = floatflag;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="i83field")
    public Set<I83formatfield> getI83formatfields() {
        return this.i83formatfields;
    }
    
    public void setI83formatfields(Set<I83formatfield> i83formatfields) {
        this.i83formatfields = i83formatfields;
    }




}


