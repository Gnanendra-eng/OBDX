package com.example.domain;
// Generated Jan 12, 2017 11:08:44 AM by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * OrigStatus generated by hbm2java
 */
@Entity
@Table(name="ORIG_STATUS"
    ,schema="FCDBADMIN_RK"
)
public class OrigStatus  implements java.io.Serializable {


     private BigDecimal status;
     private String statusDesc;
     private String hostStatus;
     private String modifyAllowed;
     private String datastore;
     private String appActor;
     private BigDecimal expdays;
     private Set<OrigStatusFlow> origStatusFlowsForCodstatus = new HashSet<OrigStatusFlow>(0);
     private Set<OrigStatusHandler> origStatusHandlers = new HashSet<OrigStatusHandler>(0);
     private Set<OrigStatusFlow> origStatusFlowsForNextstatus = new HashSet<OrigStatusFlow>(0);

    public OrigStatus() {
    }

	
    public OrigStatus(BigDecimal status) {
        this.status = status;
    }
    public OrigStatus(BigDecimal status, String statusDesc, String hostStatus, String modifyAllowed, String datastore, String appActor, BigDecimal expdays, Set<OrigStatusFlow> origStatusFlowsForCodstatus, Set<OrigStatusHandler> origStatusHandlers, Set<OrigStatusFlow> origStatusFlowsForNextstatus) {
       this.status = status;
       this.statusDesc = statusDesc;
       this.hostStatus = hostStatus;
       this.modifyAllowed = modifyAllowed;
       this.datastore = datastore;
       this.appActor = appActor;
       this.expdays = expdays;
       this.origStatusFlowsForCodstatus = origStatusFlowsForCodstatus;
       this.origStatusHandlers = origStatusHandlers;
       this.origStatusFlowsForNextstatus = origStatusFlowsForNextstatus;
    }
   
     @Id 

    
    @Column(name="STATUS", unique=true, nullable=false, precision=22, scale=0)
    public BigDecimal getStatus() {
        return this.status;
    }
    
    public void setStatus(BigDecimal status) {
        this.status = status;
    }

    
    @Column(name="STATUS_DESC", length=100)
    public String getStatusDesc() {
        return this.statusDesc;
    }
    
    public void setStatusDesc(String statusDesc) {
        this.statusDesc = statusDesc;
    }

    
    @Column(name="HOST_STATUS", length=20)
    public String getHostStatus() {
        return this.hostStatus;
    }
    
    public void setHostStatus(String hostStatus) {
        this.hostStatus = hostStatus;
    }

    
    @Column(name="MODIFY_ALLOWED", length=2)
    public String getModifyAllowed() {
        return this.modifyAllowed;
    }
    
    public void setModifyAllowed(String modifyAllowed) {
        this.modifyAllowed = modifyAllowed;
    }

    
    @Column(name="DATASTORE", length=5)
    public String getDatastore() {
        return this.datastore;
    }
    
    public void setDatastore(String datastore) {
        this.datastore = datastore;
    }

    
    @Column(name="APP_ACTOR", length=50)
    public String getAppActor() {
        return this.appActor;
    }
    
    public void setAppActor(String appActor) {
        this.appActor = appActor;
    }

    
    @Column(name="EXPDAYS", precision=22, scale=0)
    public BigDecimal getExpdays() {
        return this.expdays;
    }
    
    public void setExpdays(BigDecimal expdays) {
        this.expdays = expdays;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="origStatusByCodstatus")
    public Set<OrigStatusFlow> getOrigStatusFlowsForCodstatus() {
        return this.origStatusFlowsForCodstatus;
    }
    
    public void setOrigStatusFlowsForCodstatus(Set<OrigStatusFlow> origStatusFlowsForCodstatus) {
        this.origStatusFlowsForCodstatus = origStatusFlowsForCodstatus;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="origStatus")
    public Set<OrigStatusHandler> getOrigStatusHandlers() {
        return this.origStatusHandlers;
    }
    
    public void setOrigStatusHandlers(Set<OrigStatusHandler> origStatusHandlers) {
        this.origStatusHandlers = origStatusHandlers;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="origStatusByNextstatus")
    public Set<OrigStatusFlow> getOrigStatusFlowsForNextstatus() {
        return this.origStatusFlowsForNextstatus;
    }
    
    public void setOrigStatusFlowsForNextstatus(Set<OrigStatusFlow> origStatusFlowsForNextstatus) {
        this.origStatusFlowsForNextstatus = origStatusFlowsForNextstatus;
    }




}


