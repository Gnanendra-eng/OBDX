package com.example.domain;
// Generated Jan 12, 2017 11:08:44 AM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Application generated by hbm2java
 */
@Entity
@Table(name="APPLICATION"
    ,schema="FCDBADMIN_RK"
)
public class Application  implements java.io.Serializable {


     private String idapp;
     private String description;
     private String idappserver;
     private Byte numminthreads;
     private Byte nummaxthreads;
     private String cryptoprovider;
     private String cryptoalgorithm;
     private Short cryptokeysize;
     private String cryptopadscheme;
     private Character invokemode;
     private Character appserverfiremode;
     private Integer timeout;
     private Character isgrantable;
     private Set<Mstflatrecord> mstflatrecords = new HashSet<Mstflatrecord>(0);
     private Set<Usermenu> usermenus = new HashSet<Usermenu>(0);
     private Set<Xmltemplateheader> xmltemplateheaders = new HashSet<Xmltemplateheader>(0);
     private Set<Mstserver> mstservers = new HashSet<Mstserver>(0);

    public Application() {
    }

	
    public Application(String idapp) {
        this.idapp = idapp;
    }
    public Application(String idapp, String description, String idappserver, Byte numminthreads, Byte nummaxthreads, String cryptoprovider, String cryptoalgorithm, Short cryptokeysize, String cryptopadscheme, Character invokemode, Character appserverfiremode, Integer timeout, Character isgrantable, Set<Mstflatrecord> mstflatrecords, Set<Usermenu> usermenus, Set<Xmltemplateheader> xmltemplateheaders, Set<Mstserver> mstservers) {
       this.idapp = idapp;
       this.description = description;
       this.idappserver = idappserver;
       this.numminthreads = numminthreads;
       this.nummaxthreads = nummaxthreads;
       this.cryptoprovider = cryptoprovider;
       this.cryptoalgorithm = cryptoalgorithm;
       this.cryptokeysize = cryptokeysize;
       this.cryptopadscheme = cryptopadscheme;
       this.invokemode = invokemode;
       this.appserverfiremode = appserverfiremode;
       this.timeout = timeout;
       this.isgrantable = isgrantable;
       this.mstflatrecords = mstflatrecords;
       this.usermenus = usermenus;
       this.xmltemplateheaders = xmltemplateheaders;
       this.mstservers = mstservers;
    }
   
     @Id 

    
    @Column(name="IDAPP", unique=true, nullable=false, length=2)
    public String getIdapp() {
        return this.idapp;
    }
    
    public void setIdapp(String idapp) {
        this.idapp = idapp;
    }

    
    @Column(name="DESCRIPTION", length=30)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    
    @Column(name="IDAPPSERVER", length=2)
    public String getIdappserver() {
        return this.idappserver;
    }
    
    public void setIdappserver(String idappserver) {
        this.idappserver = idappserver;
    }

    
    @Column(name="NUMMINTHREADS", precision=2, scale=0)
    public Byte getNumminthreads() {
        return this.numminthreads;
    }
    
    public void setNumminthreads(Byte numminthreads) {
        this.numminthreads = numminthreads;
    }

    
    @Column(name="NUMMAXTHREADS", precision=2, scale=0)
    public Byte getNummaxthreads() {
        return this.nummaxthreads;
    }
    
    public void setNummaxthreads(Byte nummaxthreads) {
        this.nummaxthreads = nummaxthreads;
    }

    
    @Column(name="CRYPTOPROVIDER", length=20)
    public String getCryptoprovider() {
        return this.cryptoprovider;
    }
    
    public void setCryptoprovider(String cryptoprovider) {
        this.cryptoprovider = cryptoprovider;
    }

    
    @Column(name="CRYPTOALGORITHM", length=20)
    public String getCryptoalgorithm() {
        return this.cryptoalgorithm;
    }
    
    public void setCryptoalgorithm(String cryptoalgorithm) {
        this.cryptoalgorithm = cryptoalgorithm;
    }

    
    @Column(name="CRYPTOKEYSIZE", precision=3, scale=0)
    public Short getCryptokeysize() {
        return this.cryptokeysize;
    }
    
    public void setCryptokeysize(Short cryptokeysize) {
        this.cryptokeysize = cryptokeysize;
    }

    
    @Column(name="CRYPTOPADSCHEME", length=20)
    public String getCryptopadscheme() {
        return this.cryptopadscheme;
    }
    
    public void setCryptopadscheme(String cryptopadscheme) {
        this.cryptopadscheme = cryptopadscheme;
    }

    
    @Column(name="INVOKEMODE", length=1)
    public Character getInvokemode() {
        return this.invokemode;
    }
    
    public void setInvokemode(Character invokemode) {
        this.invokemode = invokemode;
    }

    
    @Column(name="APPSERVERFIREMODE", length=1)
    public Character getAppserverfiremode() {
        return this.appserverfiremode;
    }
    
    public void setAppserverfiremode(Character appserverfiremode) {
        this.appserverfiremode = appserverfiremode;
    }

    
    @Column(name="TIMEOUT", precision=5, scale=0)
    public Integer getTimeout() {
        return this.timeout;
    }
    
    public void setTimeout(Integer timeout) {
        this.timeout = timeout;
    }

    
    @Column(name="ISGRANTABLE", length=1)
    public Character getIsgrantable() {
        return this.isgrantable;
    }
    
    public void setIsgrantable(Character isgrantable) {
        this.isgrantable = isgrantable;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="application")
    public Set<Mstflatrecord> getMstflatrecords() {
        return this.mstflatrecords;
    }
    
    public void setMstflatrecords(Set<Mstflatrecord> mstflatrecords) {
        this.mstflatrecords = mstflatrecords;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="application")
    public Set<Usermenu> getUsermenus() {
        return this.usermenus;
    }
    
    public void setUsermenus(Set<Usermenu> usermenus) {
        this.usermenus = usermenus;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="application")
    public Set<Xmltemplateheader> getXmltemplateheaders() {
        return this.xmltemplateheaders;
    }
    
    public void setXmltemplateheaders(Set<Xmltemplateheader> xmltemplateheaders) {
        this.xmltemplateheaders = xmltemplateheaders;
    }

@ManyToMany(fetch=FetchType.LAZY, mappedBy="applications")
    public Set<Mstserver> getMstservers() {
        return this.mstservers;
    }
    
    public void setMstservers(Set<Mstserver> mstservers) {
        this.mstservers = mstservers;
    }




}


