package com.jmr.obdx.domain;
// Generated Jan 12, 2017 11:08:44 AM by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import javax.persistence.Column;
import javax.persistence.Embeddable;

/**
 * TxninitauthdatadetId generated by hbm2java
 */
@Embeddable
public class TxninitauthdatadetId  implements java.io.Serializable {


     private String parenttxninitrefno;
     private BigDecimal idseq;

    public TxninitauthdatadetId() {
    }

    public TxninitauthdatadetId(String parenttxninitrefno, BigDecimal idseq) {
       this.parenttxninitrefno = parenttxninitrefno;
       this.idseq = idseq;
    }
   


    @Column(name="PARENTTXNINITREFNO", nullable=false, length=25)
    public String getParenttxninitrefno() {
        return this.parenttxninitrefno;
    }
    
    public void setParenttxninitrefno(String parenttxninitrefno) {
        this.parenttxninitrefno = parenttxninitrefno;
    }


    @Column(name="IDSEQ", nullable=false, precision=22, scale=0)
    public BigDecimal getIdseq() {
        return this.idseq;
    }
    
    public void setIdseq(BigDecimal idseq) {
        this.idseq = idseq;
    }


   public boolean equals(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof TxninitauthdatadetId) ) return false;
		 TxninitauthdatadetId castOther = ( TxninitauthdatadetId ) other; 
         
		 return ( (this.getParenttxninitrefno()==castOther.getParenttxninitrefno()) || ( this.getParenttxninitrefno()!=null && castOther.getParenttxninitrefno()!=null && this.getParenttxninitrefno().equals(castOther.getParenttxninitrefno()) ) )
 && ( (this.getIdseq()==castOther.getIdseq()) || ( this.getIdseq()!=null && castOther.getIdseq()!=null && this.getIdseq().equals(castOther.getIdseq()) ) );
   }
   
   public int hashCode() {
         int result = 17;
         
         result = 37 * result + ( getParenttxninitrefno() == null ? 0 : this.getParenttxninitrefno().hashCode() );
         result = 37 * result + ( getIdseq() == null ? 0 : this.getIdseq().hashCode() );
         return result;
   }   


}


