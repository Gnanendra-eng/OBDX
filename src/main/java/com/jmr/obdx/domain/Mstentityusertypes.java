package com.jmr.obdx.domain;
// Generated Jan 12, 2017 11:08:44 AM by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Mstentityusertypes generated by hbm2java
 */
@Entity
@Table(name="MSTENTITYUSERTYPES"
    ,schema="FCDBADMIN_RK"
)
public class Mstentityusertypes  implements java.io.Serializable {


     private MstentityusertypesId id;
     private Mstentity mstentity;
     private Mstusertypes mstusertypes;
     private String description;
     private Character isenabled;
     private String namauthenticator;
     private String limitsallowed;
     private BigDecimal idsort;
     private String refUsertype;
     private Character isRoleCustprofAllowed;
     private String txninitflowhandler;
     private Character isRoleDefaultAllowed;
     private Character typusertoken;
     private String userlifecycleexthandler;
     private Character typerole;
     private String proxyusertype;
     private Character lookuptype;
     private Character hascustomer;
     private Character hosttype;
     private Character isactiveflag;
     private BigDecimal token1;
     private BigDecimal token2;
     private String token3;
     private String token4;
     private BigDecimal token5;
     private Character token6;
     private String token7;
     private String token8;
     private String token9;
     private String token10;
     private Byte totalset;
     private Byte quesperset;
     private Byte seclockcount;
     private Byte nbrsecquesask;
     private Character iscasesensitive;
     private String oldNamauthenticator;
     private Set<Mobileenablerusertypemap> mobileenablerusertypemaps = new HashSet<Mobileenablerusertypemap>(0);
     private Set<Mstentityuserchannel> mstentityuserchannels = new HashSet<Mstentityuserchannel>(0);
     private Set<GoalCategories> goalCategorieses = new HashSet<GoalCategories>(0);

    public Mstentityusertypes() {
    }

	
    public Mstentityusertypes(MstentityusertypesId id, Mstentity mstentity, Mstusertypes mstusertypes) {
        this.id = id;
        this.mstentity = mstentity;
        this.mstusertypes = mstusertypes;
    }
    public Mstentityusertypes(MstentityusertypesId id, Mstentity mstentity, Mstusertypes mstusertypes, String description, Character isenabled, String namauthenticator, String limitsallowed, BigDecimal idsort, String refUsertype, Character isRoleCustprofAllowed, String txninitflowhandler, Character isRoleDefaultAllowed, Character typusertoken, String userlifecycleexthandler, Character typerole, String proxyusertype, Character lookuptype, Character hascustomer, Character hosttype, Character isactiveflag, BigDecimal token1, BigDecimal token2, String token3, String token4, BigDecimal token5, Character token6, String token7, String token8, String token9, String token10, Byte totalset, Byte quesperset, Byte seclockcount, Byte nbrsecquesask, Character iscasesensitive, String oldNamauthenticator, Set<Mobileenablerusertypemap> mobileenablerusertypemaps, Set<Mstentityuserchannel> mstentityuserchannels, Set<GoalCategories> goalCategorieses) {
       this.id = id;
       this.mstentity = mstentity;
       this.mstusertypes = mstusertypes;
       this.description = description;
       this.isenabled = isenabled;
       this.namauthenticator = namauthenticator;
       this.limitsallowed = limitsallowed;
       this.idsort = idsort;
       this.refUsertype = refUsertype;
       this.isRoleCustprofAllowed = isRoleCustprofAllowed;
       this.txninitflowhandler = txninitflowhandler;
       this.isRoleDefaultAllowed = isRoleDefaultAllowed;
       this.typusertoken = typusertoken;
       this.userlifecycleexthandler = userlifecycleexthandler;
       this.typerole = typerole;
       this.proxyusertype = proxyusertype;
       this.lookuptype = lookuptype;
       this.hascustomer = hascustomer;
       this.hosttype = hosttype;
       this.isactiveflag = isactiveflag;
       this.token1 = token1;
       this.token2 = token2;
       this.token3 = token3;
       this.token4 = token4;
       this.token5 = token5;
       this.token6 = token6;
       this.token7 = token7;
       this.token8 = token8;
       this.token9 = token9;
       this.token10 = token10;
       this.totalset = totalset;
       this.quesperset = quesperset;
       this.seclockcount = seclockcount;
       this.nbrsecquesask = nbrsecquesask;
       this.iscasesensitive = iscasesensitive;
       this.oldNamauthenticator = oldNamauthenticator;
       this.mobileenablerusertypemaps = mobileenablerusertypemaps;
       this.mstentityuserchannels = mstentityuserchannels;
       this.goalCategorieses = goalCategorieses;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="idEntity", column=@Column(name="ID_ENTITY", nullable=false, length=5) ), 
        @AttributeOverride(name="typeuser", column=@Column(name="TYPEUSER", nullable=false, length=3) ) } )
    public MstentityusertypesId getId() {
        return this.id;
    }
    
    public void setId(MstentityusertypesId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_ENTITY", nullable=false, insertable=false, updatable=false)
    public Mstentity getMstentity() {
        return this.mstentity;
    }
    
    public void setMstentity(Mstentity mstentity) {
        this.mstentity = mstentity;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="TYPEUSER", nullable=false, insertable=false, updatable=false)
    public Mstusertypes getMstusertypes() {
        return this.mstusertypes;
    }
    
    public void setMstusertypes(Mstusertypes mstusertypes) {
        this.mstusertypes = mstusertypes;
    }

    
    @Column(name="DESCRIPTION", length=100)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    
    @Column(name="ISENABLED", length=1)
    public Character getIsenabled() {
        return this.isenabled;
    }
    
    public void setIsenabled(Character isenabled) {
        this.isenabled = isenabled;
    }

    
    @Column(name="NAMAUTHENTICATOR")
    public String getNamauthenticator() {
        return this.namauthenticator;
    }
    
    public void setNamauthenticator(String namauthenticator) {
        this.namauthenticator = namauthenticator;
    }

    
    @Column(name="LIMITSALLOWED", length=1)
    public String getLimitsallowed() {
        return this.limitsallowed;
    }
    
    public void setLimitsallowed(String limitsallowed) {
        this.limitsallowed = limitsallowed;
    }

    
    @Column(name="IDSORT", precision=22, scale=0)
    public BigDecimal getIdsort() {
        return this.idsort;
    }
    
    public void setIdsort(BigDecimal idsort) {
        this.idsort = idsort;
    }

    
    @Column(name="REF_USERTYPE")
    public String getRefUsertype() {
        return this.refUsertype;
    }
    
    public void setRefUsertype(String refUsertype) {
        this.refUsertype = refUsertype;
    }

    
    @Column(name="IS_ROLE_CUSTPROF_ALLOWED", length=1)
    public Character getIsRoleCustprofAllowed() {
        return this.isRoleCustprofAllowed;
    }
    
    public void setIsRoleCustprofAllowed(Character isRoleCustprofAllowed) {
        this.isRoleCustprofAllowed = isRoleCustprofAllowed;
    }

    
    @Column(name="TXNINITFLOWHANDLER")
    public String getTxninitflowhandler() {
        return this.txninitflowhandler;
    }
    
    public void setTxninitflowhandler(String txninitflowhandler) {
        this.txninitflowhandler = txninitflowhandler;
    }

    
    @Column(name="IS_ROLE_DEFAULT_ALLOWED", length=1)
    public Character getIsRoleDefaultAllowed() {
        return this.isRoleDefaultAllowed;
    }
    
    public void setIsRoleDefaultAllowed(Character isRoleDefaultAllowed) {
        this.isRoleDefaultAllowed = isRoleDefaultAllowed;
    }

    
    @Column(name="TYPUSERTOKEN", length=1)
    public Character getTypusertoken() {
        return this.typusertoken;
    }
    
    public void setTypusertoken(Character typusertoken) {
        this.typusertoken = typusertoken;
    }

    
    @Column(name="USERLIFECYCLEEXTHANDLER")
    public String getUserlifecycleexthandler() {
        return this.userlifecycleexthandler;
    }
    
    public void setUserlifecycleexthandler(String userlifecycleexthandler) {
        this.userlifecycleexthandler = userlifecycleexthandler;
    }

    
    @Column(name="TYPEROLE", length=1)
    public Character getTyperole() {
        return this.typerole;
    }
    
    public void setTyperole(Character typerole) {
        this.typerole = typerole;
    }

    
    @Column(name="PROXYUSERTYPE", length=3)
    public String getProxyusertype() {
        return this.proxyusertype;
    }
    
    public void setProxyusertype(String proxyusertype) {
        this.proxyusertype = proxyusertype;
    }

    
    @Column(name="LOOKUPTYPE", length=1)
    public Character getLookuptype() {
        return this.lookuptype;
    }
    
    public void setLookuptype(Character lookuptype) {
        this.lookuptype = lookuptype;
    }

    
    @Column(name="HASCUSTOMER", length=1)
    public Character getHascustomer() {
        return this.hascustomer;
    }
    
    public void setHascustomer(Character hascustomer) {
        this.hascustomer = hascustomer;
    }

    
    @Column(name="HOSTTYPE", length=1)
    public Character getHosttype() {
        return this.hosttype;
    }
    
    public void setHosttype(Character hosttype) {
        this.hosttype = hosttype;
    }

    
    @Column(name="ISACTIVEFLAG", length=1)
    public Character getIsactiveflag() {
        return this.isactiveflag;
    }
    
    public void setIsactiveflag(Character isactiveflag) {
        this.isactiveflag = isactiveflag;
    }

    
    @Column(name="TOKEN1", precision=22, scale=0)
    public BigDecimal getToken1() {
        return this.token1;
    }
    
    public void setToken1(BigDecimal token1) {
        this.token1 = token1;
    }

    
    @Column(name="TOKEN2", precision=22, scale=0)
    public BigDecimal getToken2() {
        return this.token2;
    }
    
    public void setToken2(BigDecimal token2) {
        this.token2 = token2;
    }

    
    @Column(name="TOKEN3", length=20)
    public String getToken3() {
        return this.token3;
    }
    
    public void setToken3(String token3) {
        this.token3 = token3;
    }

    
    @Column(name="TOKEN4", length=20)
    public String getToken4() {
        return this.token4;
    }
    
    public void setToken4(String token4) {
        this.token4 = token4;
    }

    
    @Column(name="TOKEN5", precision=22, scale=0)
    public BigDecimal getToken5() {
        return this.token5;
    }
    
    public void setToken5(BigDecimal token5) {
        this.token5 = token5;
    }

    
    @Column(name="TOKEN6", length=1)
    public Character getToken6() {
        return this.token6;
    }
    
    public void setToken6(Character token6) {
        this.token6 = token6;
    }

    
    @Column(name="TOKEN7", length=20)
    public String getToken7() {
        return this.token7;
    }
    
    public void setToken7(String token7) {
        this.token7 = token7;
    }

    
    @Column(name="TOKEN8", length=20)
    public String getToken8() {
        return this.token8;
    }
    
    public void setToken8(String token8) {
        this.token8 = token8;
    }

    
    @Column(name="TOKEN9", length=20)
    public String getToken9() {
        return this.token9;
    }
    
    public void setToken9(String token9) {
        this.token9 = token9;
    }

    
    @Column(name="TOKEN10", length=20)
    public String getToken10() {
        return this.token10;
    }
    
    public void setToken10(String token10) {
        this.token10 = token10;
    }

    
    @Column(name="TOTALSET", precision=2, scale=0)
    public Byte getTotalset() {
        return this.totalset;
    }
    
    public void setTotalset(Byte totalset) {
        this.totalset = totalset;
    }

    
    @Column(name="QUESPERSET", precision=2, scale=0)
    public Byte getQuesperset() {
        return this.quesperset;
    }
    
    public void setQuesperset(Byte quesperset) {
        this.quesperset = quesperset;
    }

    
    @Column(name="SECLOCKCOUNT", precision=2, scale=0)
    public Byte getSeclockcount() {
        return this.seclockcount;
    }
    
    public void setSeclockcount(Byte seclockcount) {
        this.seclockcount = seclockcount;
    }

    
    @Column(name="NBRSECQUESASK", precision=2, scale=0)
    public Byte getNbrsecquesask() {
        return this.nbrsecquesask;
    }
    
    public void setNbrsecquesask(Byte nbrsecquesask) {
        this.nbrsecquesask = nbrsecquesask;
    }

    
    @Column(name="ISCASESENSITIVE", length=1)
    public Character getIscasesensitive() {
        return this.iscasesensitive;
    }
    
    public void setIscasesensitive(Character iscasesensitive) {
        this.iscasesensitive = iscasesensitive;
    }

    
    @Column(name="OLD_NAMAUTHENTICATOR")
    public String getOldNamauthenticator() {
        return this.oldNamauthenticator;
    }
    
    public void setOldNamauthenticator(String oldNamauthenticator) {
        this.oldNamauthenticator = oldNamauthenticator;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="mstentityusertypes")
    public Set<Mobileenablerusertypemap> getMobileenablerusertypemaps() {
        return this.mobileenablerusertypemaps;
    }
    
    public void setMobileenablerusertypemaps(Set<Mobileenablerusertypemap> mobileenablerusertypemaps) {
        this.mobileenablerusertypemaps = mobileenablerusertypemaps;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="mstentityusertypes")
    public Set<Mstentityuserchannel> getMstentityuserchannels() {
        return this.mstentityuserchannels;
    }
    
    public void setMstentityuserchannels(Set<Mstentityuserchannel> mstentityuserchannels) {
        this.mstentityuserchannels = mstentityuserchannels;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="mstentityusertypes")
    public Set<GoalCategories> getGoalCategorieses() {
        return this.goalCategorieses;
    }
    
    public void setGoalCategorieses(Set<GoalCategories> goalCategorieses) {
        this.goalCategorieses = goalCategorieses;
    }




}


