package com.jmr.obdx.domain;
// Generated Jan 12, 2017 11:08:44 AM by Hibernate Tools 4.3.1


import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Mstrouteroperparam generated by hbm2java
 */
@Entity
@Table(name="MSTROUTEROPERPARAM"
    ,schema="FCDBADMIN_RK"
)
public class Mstrouteroperparam  implements java.io.Serializable {


     private MstrouteroperparamId id;
     private Mstrouternickoper mstrouternickoper;
     private Character valSpec;
     private String namvariable;
     private String nammember;
     private String idx;
     private String endIdx;
     private String literal;
     private Character iiflag;
     private Character eiiflag;
     private String position;
     private Character posbasedflag;
     private String datatypes;
     private String allowedValSpec;
     private Character reqWrite;
     private Character isParamMandatory;
     private Character isParamRepeatable;

    public Mstrouteroperparam() {
    }

	
    public Mstrouteroperparam(MstrouteroperparamId id, Mstrouternickoper mstrouternickoper) {
        this.id = id;
        this.mstrouternickoper = mstrouternickoper;
    }
    public Mstrouteroperparam(MstrouteroperparamId id, Mstrouternickoper mstrouternickoper, Character valSpec, String namvariable, String nammember, String idx, String endIdx, String literal, Character iiflag, Character eiiflag, String position, Character posbasedflag, String datatypes, String allowedValSpec, Character reqWrite, Character isParamMandatory, Character isParamRepeatable) {
       this.id = id;
       this.mstrouternickoper = mstrouternickoper;
       this.valSpec = valSpec;
       this.namvariable = namvariable;
       this.nammember = nammember;
       this.idx = idx;
       this.endIdx = endIdx;
       this.literal = literal;
       this.iiflag = iiflag;
       this.eiiflag = eiiflag;
       this.position = position;
       this.posbasedflag = posbasedflag;
       this.datatypes = datatypes;
       this.allowedValSpec = allowedValSpec;
       this.reqWrite = reqWrite;
       this.isParamMandatory = isParamMandatory;
       this.isParamRepeatable = isParamRepeatable;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="namoper", column=@Column(name="NAMOPER", nullable=false, length=50) ), 
        @AttributeOverride(name="flgsrctgt", column=@Column(name="FLGSRCTGT", nullable=false, length=1) ), 
        @AttributeOverride(name="namparam", column=@Column(name="NAMPARAM", nullable=false, length=50) ) } )
    public MstrouteroperparamId getId() {
        return this.id;
    }
    
    public void setId(MstrouteroperparamId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="NAMOPER", nullable=false, insertable=false, updatable=false)
    public Mstrouternickoper getMstrouternickoper() {
        return this.mstrouternickoper;
    }
    
    public void setMstrouternickoper(Mstrouternickoper mstrouternickoper) {
        this.mstrouternickoper = mstrouternickoper;
    }

    
    @Column(name="VAL_SPEC", length=1)
    public Character getValSpec() {
        return this.valSpec;
    }
    
    public void setValSpec(Character valSpec) {
        this.valSpec = valSpec;
    }

    
    @Column(name="NAMVARIABLE", length=50)
    public String getNamvariable() {
        return this.namvariable;
    }
    
    public void setNamvariable(String namvariable) {
        this.namvariable = namvariable;
    }

    
    @Column(name="NAMMEMBER", length=50)
    public String getNammember() {
        return this.nammember;
    }
    
    public void setNammember(String nammember) {
        this.nammember = nammember;
    }

    
    @Column(name="IDX", length=50)
    public String getIdx() {
        return this.idx;
    }
    
    public void setIdx(String idx) {
        this.idx = idx;
    }

    
    @Column(name="END_IDX", length=50)
    public String getEndIdx() {
        return this.endIdx;
    }
    
    public void setEndIdx(String endIdx) {
        this.endIdx = endIdx;
    }

    
    @Column(name="LITERAL", length=50)
    public String getLiteral() {
        return this.literal;
    }
    
    public void setLiteral(String literal) {
        this.literal = literal;
    }

    
    @Column(name="IIFLAG", length=1)
    public Character getIiflag() {
        return this.iiflag;
    }
    
    public void setIiflag(Character iiflag) {
        this.iiflag = iiflag;
    }

    
    @Column(name="EIIFLAG", length=1)
    public Character getEiiflag() {
        return this.eiiflag;
    }
    
    public void setEiiflag(Character eiiflag) {
        this.eiiflag = eiiflag;
    }

    
    @Column(name="POSITION", length=3)
    public String getPosition() {
        return this.position;
    }
    
    public void setPosition(String position) {
        this.position = position;
    }

    
    @Column(name="POSBASEDFLAG", length=1)
    public Character getPosbasedflag() {
        return this.posbasedflag;
    }
    
    public void setPosbasedflag(Character posbasedflag) {
        this.posbasedflag = posbasedflag;
    }

    
    @Column(name="DATATYPES", length=50)
    public String getDatatypes() {
        return this.datatypes;
    }
    
    public void setDatatypes(String datatypes) {
        this.datatypes = datatypes;
    }

    
    @Column(name="ALLOWED_VAL_SPEC", length=10)
    public String getAllowedValSpec() {
        return this.allowedValSpec;
    }
    
    public void setAllowedValSpec(String allowedValSpec) {
        this.allowedValSpec = allowedValSpec;
    }

    
    @Column(name="REQ_WRITE", length=1)
    public Character getReqWrite() {
        return this.reqWrite;
    }
    
    public void setReqWrite(Character reqWrite) {
        this.reqWrite = reqWrite;
    }

    
    @Column(name="IS_PARAM_MANDATORY", length=1)
    public Character getIsParamMandatory() {
        return this.isParamMandatory;
    }
    
    public void setIsParamMandatory(Character isParamMandatory) {
        this.isParamMandatory = isParamMandatory;
    }

    
    @Column(name="IS_PARAM_REPEATABLE", length=1)
    public Character getIsParamRepeatable() {
        return this.isParamRepeatable;
    }
    
    public void setIsParamRepeatable(Character isParamRepeatable) {
        this.isParamRepeatable = isParamRepeatable;
    }




}


