package com.jmr.obdx.domain;
// Generated Jan 12, 2017 11:08:44 AM by Hibernate Tools 4.3.1


import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * I83formatfield generated by hbm2java
 */
@Entity
@Table(name="I83FORMATFIELD"
    ,schema="FCDBADMIN_RK"
)
public class I83formatfield  implements java.io.Serializable {


     private I83formatfieldId id;
     private I83field i83field;
     private I83format i83format;
     private Character presenceflag;
     private Long idcondition;
     private Character copyflag;
     private String defaultvalue;

    public I83formatfield() {
    }

	
    public I83formatfield(I83formatfieldId id, I83field i83field, I83format i83format) {
        this.id = id;
        this.i83field = i83field;
        this.i83format = i83format;
    }
    public I83formatfield(I83formatfieldId id, I83field i83field, I83format i83format, Character presenceflag, Long idcondition, Character copyflag, String defaultvalue) {
       this.id = id;
       this.i83field = i83field;
       this.i83format = i83format;
       this.presenceflag = presenceflag;
       this.idcondition = idcondition;
       this.copyflag = copyflag;
       this.defaultvalue = defaultvalue;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="ver", column=@Column(name="VER", nullable=false, length=4) ), 
        @AttributeOverride(name="idformat", column=@Column(name="IDFORMAT", nullable=false, length=4) ), 
        @AttributeOverride(name="position", column=@Column(name="POSITION", nullable=false, precision=5, scale=0) ) } )
    public I83formatfieldId getId() {
        return this.id;
    }
    
    public void setId(I83formatfieldId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="VER", referencedColumnName="VER", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="POSITION", referencedColumnName="POSITION", nullable=false, insertable=false, updatable=false) } )
    public I83field getI83field() {
        return this.i83field;
    }
    
    public void setI83field(I83field i83field) {
        this.i83field = i83field;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="VER", referencedColumnName="VER", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="IDFORMAT", referencedColumnName="IDFORMAT", nullable=false, insertable=false, updatable=false) } )
    public I83format getI83format() {
        return this.i83format;
    }
    
    public void setI83format(I83format i83format) {
        this.i83format = i83format;
    }

    
    @Column(name="PRESENCEFLAG", length=1)
    public Character getPresenceflag() {
        return this.presenceflag;
    }
    
    public void setPresenceflag(Character presenceflag) {
        this.presenceflag = presenceflag;
    }

    
    @Column(name="IDCONDITION", precision=18, scale=0)
    public Long getIdcondition() {
        return this.idcondition;
    }
    
    public void setIdcondition(Long idcondition) {
        this.idcondition = idcondition;
    }

    
    @Column(name="COPYFLAG", length=1)
    public Character getCopyflag() {
        return this.copyflag;
    }
    
    public void setCopyflag(Character copyflag) {
        this.copyflag = copyflag;
    }

    
    @Column(name="DEFAULTVALUE")
    public String getDefaultvalue() {
        return this.defaultvalue;
    }
    
    public void setDefaultvalue(String defaultvalue) {
        this.defaultvalue = defaultvalue;
    }




}


